#
# Copyright Â© 2016-2018 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
apiVersion: v1
kind: Service
metadata:
  name: egys-service
  namespace: egys
  labels:
    app: egys-service
spec:
  ports:
  - port: 8080
    name: ui
    nodePort: 31080
  - port: 1883
    nodePort: 31883
    name: mqtt
  - port: 5683
    name: coap
  selector:
    app: egys
  type: NodePort
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: egys-budget
  namespace: egys
spec:
  selector:
    matchLabels:
      app: egys
  minAvailable: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: egys-config
  namespace: egys
data:
  zookeeper.enabled: "true"
  audit_log.sink_type: "egys"
  audit_log.sink_host: "audit-service"
  audit_log.sink_port: "8090"
  audit_log.kafka_brokers: "as-kafka:9092"
  zookeeper.url: "zk-headless"
  egys_create_map_widget: "false"
  database.ts.type: "sql"
  database.entities.type: "sql"
  postgresql.url: "jdbc:postgresql://pg-egys:5432/thingsboard"
  cache.type: "redis"
  redis.host: "redis-service"
  ui-port: "8080"
  add_schema_and_system_data: "false"
  add_demo_data: "false"
  keycloak.auth_provider_url: "http://10.151.102.217:8082"
  jwt.token_expire_time: "180000"
  jwt.refresh_token_expire_time: "360000"
  pgks_log_schema_name: "http"
  pgks_log_host: "85.105.122.24"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: egys
  namespace: egys
spec:
  serviceName: "egys-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: egys
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - egys-service
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: egys
        imagePullPolicy: IfNotPresent
        image: dockerepo.dc01.havelsan.io/botas/egys/application:2.4.5-SNAPSHOT-development-84
        ports:
        - containerPort: 8080
          name: ui
        - containerPort: 1883
          name: mqtt
        - containerPort: 5683
          name: coap
        - containerPort: 9001
          name: rpc
        env:
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: pg-egys-postgres-secret
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-egys-postgres-secret
              key: password
        - name: AUDIT_LOG_SINK_TYPE
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: audit_log.sink_type
        - name: AUDIT_LOG_SINK_HOST
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: audit_log.sink_host
        - name: AUDIT_LOG_SINK_PORT
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: audit_log.sink_port
        - name: AUDIT_SERVICE_KAFKA_PRODUCER_BROKERS
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: audit_log.kafka_brokers      
        - name: ZOOKEEPER_ENABLED
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: zookeeper.enabled
        - name: ZOOKEEPER_URL
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: zookeeper.url
        - name : SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: postgresql.url
        - name: DATABASE_TS_TYPE
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: database.ts.type
        - name: DATABASE_ENTITIES_TYPE
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: database.entities.type
        - name : RPC_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ADD_SCHEMA_AND_SYSTEM_DATA
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: add_schema_and_system_data
        - name: ADD_DEMO_DATA
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: add_demo_data
        - name: KEYCLOAK_AUTH_PROVIDER_URL
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: keycloak.auth_provider_url
        - name: JWT_TOKEN_EXPIRATION_TIME
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: jwt.token_expire_time
        - name: JWT_REFRESH_TOKEN_EXPIRATION_TIME
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: jwt.refresh_token_expire_time
        - name: EGYS_CREATE_MAP_WIDGET
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: egys_create_map_widget
        - name: PGKS_LOG_SCHEMA_NAME
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: pgks_log_schema_name
        - name: PGKS_LOG_HOST
          valueFrom:
            configMapKeyRef:
              name: egys-config
              key: pgks_log_host
                            
        command:
        - sh
        - -c
        - /run-application.sh
        livenessProbe:
          httpGet:
            path: /login
            port: ui
          initialDelaySeconds: 120
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            port: ui 
            path: /login
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
          successThreshold: 1
          failureThreshold: 1
          timeoutSeconds: 1
        
        

