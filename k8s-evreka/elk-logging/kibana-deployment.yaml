apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: evreka
data:
  kibana.yml: |-
    server.name: kibana
    server.host: "0"
    elasticsearch.url: http://elasticsearch-logging:9200

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: evreka
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      containers:
      - name: kibana-logging
        image: 10.151.17.110/edbys/kutuni/elk.kibana:6.3.2
        # image: docker.elastic.co/kibana/kibana-oss:6.3.2
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_URL
            value: http://elasticsearch-logging:9200
          # - name: SERVER_BASEPATH
          #   value: /api/v1/namespaces/kube-system/services/kibana-logging/proxy
        volumeMounts:
        - name: kibana-vol
          mountPath: /usr/share/kibana/config/kibana.yml
          subPath: kibana.yml
          readOnly: true
        - name: tz-config
          mountPath: /etc/localtime
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
      volumes:
      - name: kibana-vol
        configMap:
          name: kibana-config
          items:
          - key: kibana.yml
            path: kibana.yml
      - name: tz-config
        hostPath:
          path: /etc/localtime

