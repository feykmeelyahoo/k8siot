# RBAC authn and authz
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-dcr
  namespace: evreka
  labels:
    k8s-app: elasticsearch-dcr
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch-dcr
  labels:
    k8s-app: elasticsearch-dcr
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: evreka
  name: elasticsearch-dcr
  labels:
    k8s-app: elasticsearch-dcr
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: elasticsearch-dcr
  namespace: evreka
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch-dcr
  apiGroup: ""
---
# Elasticsearch deployment itself
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-dcr
  namespace: evreka
  labels:
    k8s-app: elasticsearch-dcr
    version: 5.6.5-alpine
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  serviceName: elasticsearch-dcr
  replicas: 1
  selector:
    matchLabels:
      k8s-app: elasticsearch-dcr
      version: 5.6.5-alpine
  template:
    metadata:
      labels:
        k8s-app: elasticsearch-dcr
        version: 5.6.5-alpine
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: elasticsearch-dcr
      imagePullSecrets:
      - name: harbor
      containers:
      - image: 10.151.17.110/edbys/elasticsearch:5.6.5-alpine
        name: elasticsearch-dcr
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: 9200
          name: es-http
        - containerPort: 9300
          name: es-transport
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
#        - name: "ES_JAVA_OPTS"
# Değişti Aşağıdaki gibi          value: "-XX:-AssumeMP"
#          value: "-Xms4g -Xmx4g"
      # Elasticsearch requires vm.max_map_count to be at least 262144.
      # If your OS already sets up this number to a higher value, feel free
      # to remove this init container.
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-dcr-init
        securityContext:
          privileged: true
        env:
        - name: ES_JAVA_OPTS
          valueFrom:
              configMapKeyRef:
                  name: es-config
                  key: ES_JAVA_OPTS
        # readinessProbe:
        #   httpGet:
        #     scheme: HTTP
        #     path: /_cluster/health?local=true
        #     port: 9200
        #   initialDelaySeconds: 5
        volumeMounts:
        - name: es-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-yml
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
      volumes:
        - name: elasticsearch-yml
          configMap:
            name: es-config
            items:
                - key: elasticsearch.yml
                  path: elasticsearch.yml
  volumeClaimTemplates:
  - metadata:
      name: es-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi